name: Release

on:
  workflow_run:
    workflows: ["Build"]
    types:
      - completed

jobs:
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Windows build artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact-windows-latest
          path: release/windows
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download macOS build artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact-macos-latest
          path: release/macos
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install

      - name: Extract changelog
        id: changelog
        run: |
          echo "notes<<EOF" >> $GITHUB_OUTPUT
          node scripts/extract-changelog.js >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Get package version
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Debug - List downloaded files
        run: |
          echo "=== Listing all files in release directory ==="
          find release -type f -ls || echo "No release directory found"
          echo "=== Checking specific patterns ==="
          ls -la release/windows/**/*.exe 2>/dev/null || echo "No Windows exe files found"
          ls -la release/macos/**/*.dmg 2>/dev/null || echo "No macOS dmg files found"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          body: ${{ steps.changelog.outputs.notes }}
          files: |
            release/windows/**/*.exe
            release/windows/**/*.blockmap
            release/windows/**/latest*.yml
            release/macos/**/*.dmg
            release/macos/**/*.blockmap
            release/macos/**/latest*.yml
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
